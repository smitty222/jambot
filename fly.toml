app = "jamflowbot-allen-v4"
primary_region = "iad"

# Don't create a 2nd machine during deploys (saves cost / avoids split brain)
[deploy]
  strategy = "immediate"

[env]
  # ── Site publisher / cron config ─────────────────────────
  ENABLE_SITE_PUBLISH_CRON = "1"
  PUBLISH_TZ = "America/New_York"
  # run publisher at 09:00, 13:00, 17:00 ET daily
  PUBLISH_CRON = "0 9,13,17 * * *"
  PUBLISH_RUN_ON_BOOT = "1"
  PUBLISH_SCRIPT = "tools/publish-site-data.mjs"

  # Worker API for publishing site data
  API_BASE = "https://jamflow-site-api.jamflowbot.workers.dev"

  # ── Persistent data paths (lives on the attached volume) ─
  DB_PATH = "/data/app.db"
  PUBLISH_STATE_FILE = "/data/.publish-state.json"

  # ── Logging level for the bot ────────────────────────────
  LOG_LEVEL = "info"

# HTTP service definition. This tells Fly:
# - what port to route to
# - how to health check
# - and (critically) NOT to autosuspend
[http_service]
  # Must match the port your Express app.listen() is using
  internal_port = 8080

  force_https = true

  # If machine is down for some reason, Fly can cold-start it on demand.
  auto_start_machines = true

  # >>> OPTION A BEGINS HERE <<<
  # We DO NOT allow Fly to auto-stop this machine.
  auto_stop_machines = "off"

  # Keep 1 machine warm at all times.
  min_machines_running = 1

  # Health check so Fly knows we're good and doesn't keep restarting us.
  [[http_service.checks]]
    interval = "10s"
    timeout = "2s"
    method = "GET"
    path = "/health"
    grace_period = "10s"

# Attach the volume for persistent DB/etc.
[[mounts]]
  source = "jamflowbot_data"
  destination = "/data"

# VM resources. This matches what you're currently scaled to.
[[vm]]
  memory = "1024mb"
  cpu_kind = "shared"
  cpus = 1
